install.packages("plyr","ggplot2","reshape","reshape2","MASS")
install.packages(c("plyr","ggplot2","reshape","reshape2","MASS"))
install_github("sacbox", "schamberlain")
install.packages("devtools")
library(devtools)
install_github("sacbox", "schamberlain")
install.packages("phytools")
library(ape); library(plyr); library(stringr); library(bipartite); library(gridExtra)
install.packages("gridExtra")
library(ape); library(plyr); library(stringr); library(bipartite); library(gridExtra)
files <- dir("/Users/scottmac2/Dropbox/CANPOLIN_treeshape_ms/data/empirical/rezendeetal2007nature/trees/rezendeetal2007nature")
files
filedirs <- paste("/Users/scottmac2/Dropbox/CANPOLIN_treeshape_ms/data/empirical/rezendeetal2007nature/trees/rezendeetal2007nature/", files, sep="")
readtree <- function(x) {
con <- file(x)
tt <- readLines(con); close(con) # read lines
tt_ <- tt[ sapply(tt, nchar, USE.NAMES=F) > 0 ] # remove blank lines
tt_ <- str_trim(tt_, side="both") # trim whitespace
tt_2 <- str_replace_all(tt_, ":\\s", ":")
tt_3 <- str_replace_all(tt_2, "\\s", "_") # put underscore in species names
read.tree(text=tt_3) # read tree
}
trees <- llply(filedirs, readtree, .progress="text")
length(trees)
trees[[1]]
trees[[10]]
convertt <- function(x) {
x$edge.length <- rep(1,nrow(x$edge))
if(is.ultrametric(x) == "TRUE"){ x } else
{ compute.brlen(x, method = "Grafen") }
}
trees_convert <- llply(trees, convertt, .progress="text")
length(trees_convert)
library(ape); library(apTreeshape); library(plyr)
files
calcmets <- function(x) {
numtips <- Ntip(x)
numnodes <- Nnode(x)
x_ <- multi2di(x)
gam_ <- gammaStat(x_)
xx <- as.treeshape(x_)
col_ <- colless(xx, "yule")
beta_ <- maxlik.betasplit(xx)[[1]]
list(numtips=numtips, numnodes=numnodes, gam_ = gam_, col_ = col_, beta_ = beta_)
}
metrics <- llply(trees_convert, calcmets, .progress="text")
calcmets <- function(x) {
numtips <- Ntip(x)
numnodes <- Nnode(x)
x_ <- multi2di(x)
gam_ <- gammaStat(x_)
xx <- as.treeshape(x_)
col_ <- colless(xx, "yule")
# 	beta_ <- maxlik.betasplit(xx)[[1]]
list(numtips=numtips, numnodes=numnodes, gam_ = gam_, col_ = col_)
}
metrics <- llply(trees_convert, calcmets, .progress="text")
metricsdf <- data.frame(
studyname = sapply(files, function(x) strsplit(strsplit(x, ".txt")[[1]][[1]], "_")[[1]][[2]], USE.NAMES=F),
type = sapply(files, function(x) strsplit(x, "_")[[1]][[1]], USE.NAMES=F),
ldply(metrics, function(x) as.data.frame(x)))
metricsdf
names(metricsdf)[5:6] <- c("gamma","colless")
head(metricsdf)
library(reshape2)
melt(metricsdf, id.vars=1:2)
dfm <- melt(metricsdf, id.vars=1:2)
head(dfm)
dcast(dfm, studyname + type ~ variable)
dcast(dfm, studyname ~ type+ variable)
files
files[-c(29,49)]
files <- dir("/Users/scottmac2/Dropbox/CANPOLIN_treeshape_ms/data/empirical/rezendeetal2007nature/trees/rezendeetal2007nature")
files <- files[-c(29,49)]
filedirs <- paste("/Users/scottmac2/Dropbox/CANPOLIN_treeshape_ms/data/empirical/rezendeetal2007nature/trees/rezendeetal2007nature/", files, sep="")
readtree <- function(x) {
con <- file(x)
tt <- readLines(con); close(con) # read lines
tt_ <- tt[ sapply(tt, nchar, USE.NAMES=F) > 0 ] # remove blank lines
tt_ <- str_trim(tt_, side="both") # trim whitespace
tt_2 <- str_replace_all(tt_, ":\\s", ":")
tt_3 <- str_replace_all(tt_2, "\\s", "_") # put underscore in species names
read.tree(text=tt_3) # read tree
}
trees <- llply(filedirs, readtree, .progress="text")
length(trees)
### Set all branch lengths equal to 1 and make ultrametric
convertt <- function(x) {
x$edge.length <- rep(1,nrow(x$edge))
if(is.ultrametric(x) == "TRUE"){ x } else
{ compute.brlen(x, method = "Grafen") }
}
trees_convert <- llply(trees, convertt, .progress="text")
length(trees_convert)
library(ape); library(apTreeshape); library(plyr)
calcmets <- function(x) {
numtips <- Ntip(x)
numnodes <- Nnode(x)
x_ <- multi2di(x)
gam_ <- gammaStat(x_)
xx <- as.treeshape(x_)
col_ <- colless(xx, "yule")
# 	beta_ <- maxlik.betasplit(xx)[[1]]
list(numtips=numtips, numnodes=numnodes, gam_ = gam_, col_ = col_)
}
metrics <- llply(trees_convert, calcmets, .progress="text")
metricsdf <- data.frame(
studyname = sapply(files, function(x) strsplit(strsplit(x, ".txt")[[1]][[1]], "_")[[1]][[2]], USE.NAMES=F),
type = sapply(files, function(x) strsplit(x, "_")[[1]][[1]], USE.NAMES=F),
ldply(metrics, function(x) as.data.frame(x)))
names(metricsdf)[5:6] <- c("gamma","colless")
head(metricsdf)
library(reshape2)
dfm <- melt(metricsdf, id.vars=1:2)
dcast(dfm, studyname ~ type+ variable)
write.csv(dcast(dfm, studyname ~ type+ variable), "~/studysummary.csv")
dois <- read.csv("/Users/scottmac2/Mac/JEcol_blog/DOIs/jecol_dois.csv")
head(dois)
dois <- read.csv("/Users/scottmac2/Mac/JEcol_blog/DOIs/jecol_dois.csv")[,1]
dois
dois <- as.character(read.csv("/Users/scottmac2/Mac/JEcol_blog/DOIs/jecol_dois.csv")[,1])
dois
library(stringr); library(ggplot2)
str_replace_all(dois, "DOI: ", "")
str_trim(str_replace_all(dois, "DOI: ", ""), "both")
dois <- str_trim(str_replace_all(dois, "DOI: ", ""), "both") # trim stuff
install_github("rimpactstory", "ropensci")
library(rImpactStory)
help(package="rImpactStory")
metrics(dois[[1]])
install_github("rAltmetric", "ropensci")
library(rAltmetric)
altmetrics(dois[[1]])
altmetrics(doi=dois[[1]])
llply(dois[1:2], altmetrics, .progress="text")
llply(dois[1:2], function(x) altmetrics(doi=x), .progress="text")
out <- llply(dois[1:2], function(x) altmetrics(doi=x), .progress="text")
ldply(out)
ldply(out, altmetric_data)
out <- llply(dois, function(x) altmetrics(doi=x), .progress="text")
outdf <- ldply(out, altmetric_data)
head(outdf)
str(outdf)
write.csv(outdf, file = "/Users/scottmac2/Mac/JEcol_blog/DOIs/altmetrics_data.csv")
out
out[is.null(out)] # remove NULLs
is.null(out)
sapply(out, is.null)
out[sapply(out, is.null)] # remove NULLs
out[!sapply(out, is.null)] # remove NULLs
out <- out[!sapply(out, is.null)] # remove NULLs
outdf <- ldply(out, altmetric_data)
str(outdf)
out[[1]]
unlist(out[[1]])
lapply(out[1:2], function(x) rbind(unlist(x)))
lapply(out[1:2], function(x) data.frame(unlist(x)))
ldply(out[1:2], function(x) data.frame(unlist(x)))
altmetric_data
head(outdf)
head(outdf)
setwd("~github/sac/work/jecol/papers2012")
setwd("~/github/sac/work/jecol/papers2012")
dois <- as.character(read.csv("~/github/sac/work/jecol/papers2012/jecol_dois.csv")[,1])
dois
