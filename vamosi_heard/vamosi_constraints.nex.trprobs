#NEXUS

[ID: 6298103322]
[This file contains the trees that were found during the MCMC
search, sorted by posterior probability. "p" indicates the
posterior probability of the tree whereas "P" indicates the
cumulative posterior probability.]

begin trees;
   translate
    1 Acipenser_brevirostrum,
    2 Acipenser_oxyrinchus,
    3 Alosa_aestivalis,
    4 Alosa_pseudoharengus,
    5 Alosa_sapidissima,
    6 Ambloplites_rupestris,
    7 Ameiurus_nebulosus,
    8 Anguilla_rostrata,
    9 Apeltes_quadracus,
   10 Carassius_auratus,
   11 Catostomus_catostomus,
   12 Catostomus_commersonii,
   13 Chrosomus_neogaeus,
   14 Coregonus_artedi,
   15 Coregonus_clupeaformis,
   16 Cottus_bairdii,
   17 Cottus_cognatus,
   18 Cottus_ricei,
   19 Couesius_plumbeus,
   20 Culaea_inconstans,
   21 Esox_masquinongy,
   22 Esox_niger,
   23 Etheostoma_exile,
   24 Etheostoma_nigrum,
   25 Fundulus_diaphanus,
   26 Fundulus_heteroclitus,
   27 Gasterosteus_aculeatus,
   28 Gasterosteus_wheatlandi,
   29 Lepomis_auritus,
   30 Lepomis_gibbosus,
   31 Lepomis_macrochirus,
   32 Lota_lota,
   33 Luxilus_cornutus,
   34 Margariscus_margarita,
   35 Microgadus_tomcod,
   36 Micropterus_dolomieu,
   37 Micropterus_salmoides,
   38 Morone_americana,
   39 Morone_saxatilis,
   40 Notemigonus_crysoleucas,
   41 Notropis_atherinoides,
   42 Notropis_chrosomus,
   43 Notropis_heterolepis,
   44 Notropis_hudsonius,
   45 Notropis_leuciodus,
   46 Oncorhynchus_mykiss,
   47 Perca_flavescens,
   48 Percina_caprodes,
   49 Percopsis_omiscomaycus,
   50 Petromyzon_marinus,
   51 Phoxinus_eos,
   52 Pimephales_notatus,
   53 Pimephales_promelas,
   54 Prosopium_cylindraceum,
   55 Pungitius_pungitius,
   56 Rhinichthys_atratulus,
   57 Salmo_salar,
   58 Salmo_trutta,
   59 Salvelinus_alpinus,
   60 Salvelinus_fontinalis,
   61 Salvelinus_namaycush,
   62 Sander_vitreus,
   63 Semotilus_atromaculatus,
   64 Semotilus_corporalis,
   65 Umbra_limi;
   tree tree_1 [p = 0.038, P = 0.038] = [&W 0.038462] (2,((12,11),((44,((53,52),(45,(((43,42),41),33)))),(((64,63),(40,(56,(34,19)))),(((51,13),((18,(17,16)),((8,7),((50,((28,27),((55,20),9))),((48,(24,23)),((62,47),(((26,25),(((37,36),(31,(30,29))),6)),(49,((35,32),(((54,((65,22),(21,(57,(58,((((61,60),59),46),(15,14))))))),10),((39,38),(5,4)))))))))))),3)))),1);
   tree tree_2 [p = 0.026, P = 0.064] = [&W 0.025641] (2,((12,11),((((56,((43,(44,41)),(53,(52,(45,(42,33)))))),(63,((64,34),19))),(40,(10,(((22,((65,(39,38)),21)),((58,57),(((61,59),(60,46)),(54,(15,14))))),7)))),(((51,13),8),(((26,25),((47,((49,((35,32),(20,(27,(28,(50,(18,(17,16)))))))),((62,48),((24,23),(55,9))))),((37,36),((31,(30,29)),6)))),((5,4),3))))),1);
   tree tree_3 [p = 0.026, P = 0.090] = [&W 0.025641] (2,((12,11),((((43,(44,41)),(53,(52,(45,(42,33))))),(56,(63,((64,34),19)))),((40,(10,(((22,((65,(39,38)),21)),((58,57),(((61,59),(60,(62,46))),(54,(15,14))))),7))),(((51,13),8),(((26,25),((47,((49,((35,32),(20,(27,(28,(50,(18,(17,16)))))))),(48,(23,(24,(55,9)))))),((37,36),((31,(30,29)),6)))),((5,4),3)))))),1);
   tree tree_4 [p = 0.026, P = 0.115] = [&W 0.025641] (2,((12,11),(((((22,((65,(39,38)),21)),((58,57),(((61,59),(60,46)),(54,(15,14))))),10),7),((40,((56,(((44,43),41),(42,((53,52),(45,33))))),(63,((64,34),19)))),(((51,13),8),(((26,25),(((62,47),((48,(24,23)),((49,(35,32)),(20,((28,27),(55,((50,(18,(17,16))),9))))))),((31,(30,29)),((37,36),6)))),((5,4),3)))))),1);
   tree tree_5 [p = 0.026, P = 0.141] = [&W 0.025641] (2,((12,11),(((51,13),(((18,17),16),((8,7),((50,((28,27),((55,20),9))),(((62,47),(48,(24,23))),(((26,25),(((37,36),(31,(30,29))),6)),(49,((35,32),(((54,((65,22),(21,(57,(58,((((61,60),59),46),(15,14))))))),10),(39,(38,(5,4)))))))))))),((44,(45,((53,52),(((43,42),41),33)))),(((64,63),(40,(56,(34,19)))),3)))),1);
   tree tree_6 [p = 0.026, P = 0.167] = [&W 0.025641] (2,((12,11),((45,((44,41),(43,(42,33)))),((53,52),(40,((64,63),((((56,(34,19)),((18,17),16)),(((51,8),(13,7)),((50,((28,27),((55,20),9))),((48,(24,23)),(((37,36),((62,47),(26,25))),(((31,(30,29)),6),(10,((65,22),(((39,38),(49,(35,32))),(((54,21),(57,(58,((((61,60),59),46),(15,14))))),(5,4))))))))))),3)))))),1);
   tree tree_7 [p = 0.013, P = 0.179] = [&W 0.012821] (2,((12,11),((53,45),(7,(((50,(18,17)),8),(39,(((48,47),(((62,31),(((65,32),(60,(26,25))),(35,16))),((37,36),((((44,33),30),(51,13)),6)))),((29,((28,27),(55,24))),((20,((23,(40,(64,21))),((42,(63,(52,(43,41)))),((34,19),((56,38),10))))),(54,((((58,57),46),22),((61,59),(15,(14,((49,9),((5,4),3))))))))))))))),1);
   tree tree_8 [p = 0.013, P = 0.192] = [&W 0.012821] (2,((12,11),((10,(((22,((65,(39,38)),21)),((58,57),(((60,(61,59)),46),(54,(15,14))))),7)),((40,((56,(41,(((44,43),42),((53,52),(45,33))))),(63,((64,34),19)))),(((51,13),8),(((26,25),(((62,47),((48,(24,23)),((49,(35,32)),(20,((28,27),(55,((50,(18,(17,16))),9))))))),((31,(30,29)),((37,36),6)))),((5,4),3)))))),1);
   tree tree_9 [p = 0.013, P = 0.205] = [&W 0.012821] (2,((12,11),((45,43),(((52,40),(53,(44,(42,(41,33))))),(((64,63),(((34,19),((18,17),16)),(((((57,(46,21)),((59,58),(((35,32),(39,(49,(30,29)))),(15,14)))),(31,10)),((65,22),((((47,((37,36),26)),((48,(24,23)),(54,(62,(56,(13,(51,8))))))),(((50,(55,(25,(38,20)))),9),(28,(27,7)))),6))),((61,60),(5,4))))),3)))),1);
   tree tree_10 [p = 0.013, P = 0.218] = [&W 0.012821] (2,((12,11),((45,43),(((52,40),(53,(44,(42,(41,33))))),(((64,63),(((34,19),((18,17),16)),(((((59,58),(46,(57,21))),(((35,32),(39,(49,(30,29)))),(15,14))),((65,22),((((47,((37,36),26)),((48,(24,23)),(54,(62,(56,(13,(51,8))))))),((55,(25,(38,20))),((50,9),(28,(27,7))))),((31,10),6)))),((61,60),(5,4))))),3)))),1);
   tree tree_11 [p = 0.013, P = 0.231] = [&W 0.012821] (2,((12,11),((40,((56,(41,(((44,43),42),((53,52),(45,33))))),(63,((64,34),19)))),((10,((((65,(39,38)),(22,21)),(54,(((58,57),(((61,60),59),46)),(15,14)))),7)),(((51,13),8),(((26,25),(((48,(24,23)),((62,47),((49,(35,32)),(20,(55,(((28,27),(50,(18,(17,16)))),9)))))),((31,(30,29)),((37,36),6)))),((5,4),3)))))),1);
   tree tree_12 [p = 0.013, P = 0.244] = [&W 0.012821] (2,((12,11),((40,((56,(41,(((44,43),42),((53,52),(45,33))))),(63,((64,34),19)))),((10,((((65,(39,38)),(22,21)),(54,(((58,57),(((61,60),59),46)),(15,14)))),7)),(((51,13),8),(((26,25),(((48,(24,23)),((62,47),((49,(35,32)),(20,(55,(((28,27),(50,(18,(17,16)))),9)))))),(((37,36),(31,(30,29))),6))),((5,4),3)))))),1);
   tree tree_13 [p = 0.013, P = 0.256] = [&W 0.012821] (2,((12,11),((40,((56,(41,(((44,43),42),((53,52),(45,33))))),(63,((64,34),19)))),((10,((((65,(39,38)),(22,21)),(54,(((58,57),((60,(61,59)),46)),(15,14)))),7)),(((51,13),8),(((26,25),(((62,47),((48,(24,23)),((49,(35,32)),(20,(55,(((28,27),(50,(18,(17,16)))),9)))))),((31,(30,29)),((37,36),6)))),((5,4),3)))))),1);
   tree tree_14 [p = 0.013, P = 0.269] = [&W 0.012821] (2,((12,11),((40,((56,(41,(((44,43),42),((53,52),(45,33))))),(63,((64,34),19)))),((10,((((65,(39,38)),(22,21)),(54,(((58,57),(((61,60),59),46)),(15,14)))),7)),(((51,13),8),(((26,25),(((62,47),((48,(24,23)),((49,(35,32)),(20,(55,(((28,27),(50,(18,(17,16)))),9)))))),((31,(30,29)),((37,36),6)))),((5,4),3)))))),1);
   tree tree_15 [p = 0.013, P = 0.282] = [&W 0.012821] (2,((12,11),((45,(43,(44,(41,(42,33))))),(((53,52),40),((64,63),((((34,19),(56,((18,17),16))),(((51,8),(13,7)),((48,(24,23)),(((55,20),((50,(28,27)),9)),(((62,47),((37,36),(26,25))),((10,((31,(30,29)),6)),((65,22),(((39,38),(49,(35,32))),(((54,21),(57,(58,((((61,60),59),46),(15,14))))),(5,4)))))))))),3))))),1);
   tree tree_16 [p = 0.013, P = 0.295] = [&W 0.012821] (2,((12,11),((((18,17),16),((8,7),((50,((28,27),((55,20),9))),(((62,47),(48,(24,23))),(((26,25),(((37,36),(31,(30,29))),6)),(49,((35,32),((54,(65,(22,(21,(57,(58,((((61,60),59),46),(15,14)))))))),(39,(38,(5,4))))))))))),((51,13),(((44,(45,((53,52),(41,((43,42),33))))),((64,63),((56,40),(34,19)))),(10,3))))),1);
   tree tree_17 [p = 0.013, P = 0.308] = [&W 0.012821] (2,((12,11),(43,(45,(((52,40),(53,((44,41),(42,33)))),(((64,63),(((34,19),((18,17),16)),(56,(((51,8),(13,7)),((48,(24,23)),(((62,47),((37,36),(26,25))),(((55,20),((50,(28,27)),9)),((10,((31,(30,29)),6)),((65,22),(((49,(39,38)),(35,32)),(((57,(54,21)),(58,((((61,60),59),46),(15,14)))),(5,4)))))))))))),3))))),1);
   tree tree_18 [p = 0.013, P = 0.321] = [&W 0.012821] (2,((12,11),(43,(45,((40,(52,(53,((44,41),(42,33))))),(((64,63),(((34,19),(56,((18,17),16))),(((51,8),(13,7)),((48,(24,23)),(((55,20),((50,(28,27)),9)),(((62,47),((37,36),(26,25))),((10,((31,(30,29)),6)),((65,22),(((49,(39,38)),(35,32)),(((57,(54,21)),(58,((((61,60),59),46),(15,14)))),(5,4))))))))))),3))))),1);
   tree tree_19 [p = 0.013, P = 0.333] = [&W 0.012821] (2,((12,11),((((18,17),16),((8,7),((50,((28,27),((55,20),9))),(((26,25),(((37,36),(31,(30,29))),6)),(((48,(62,47)),(24,23)),(49,((35,32),(39,((54,(65,(22,(21,(57,(58,((((61,60),59),46),(15,14)))))))),(38,(5,4))))))))))),(((((44,(((53,52),45),((43,42),(41,33)))),((64,63),((56,40),(34,19)))),(51,13)),10),3))),1);
   tree tree_20 [p = 0.013, P = 0.346] = [&W 0.012821] (2,((12,11),((43,(45,(42,(41,33)))),(((53,44),(52,40)),(((64,63),(((34,19),((18,17),16)),(((((59,58),((46,21),(57,(((35,32),(39,(49,(30,29)))),(15,14))))),(31,10)),((65,22),(((((47,((37,36),26)),(48,(24,23))),(54,(62,(56,(13,(51,8)))))),(28,(((50,((55,25),(38,20))),9),(27,7)))),6))),((61,60),(5,4))))),3)))),1);
   tree tree_21 [p = 0.013, P = 0.359] = [&W 0.012821] (2,((12,11),((((18,17),16),((8,7),((50,((28,27),((55,20),9))),(((62,47),(48,(24,23))),(((26,25),(((37,36),(31,(30,29))),6)),(49,((35,32),((54,(65,(22,(21,(57,(58,((((61,60),59),46),(15,14)))))))),(39,(38,(5,4))))))))))),((((44,(((53,52),45),(41,((43,42),33)))),((64,63),((56,40),(34,19)))),(51,13)),(10,3)))),1);
   tree tree_22 [p = 0.013, P = 0.372] = [&W 0.012821] (2,((12,11),((((18,17),16),((8,7),((50,((28,27),((55,20),9))),(((48,(62,47)),(24,23)),(((26,25),(((37,36),(31,(30,29))),6)),(49,((35,32),(39,((54,(65,(22,(21,(57,(58,((((61,60),59),46),(15,14)))))))),(38,(5,4))))))))))),(((((44,(((53,52),45),((43,42),(41,33)))),((64,63),((56,40),(34,19)))),(51,13)),10),3))),1);
   tree tree_23 [p = 0.013, P = 0.385] = [&W 0.012821] (2,((12,11),(44,(((((43,41),(52,(53,(42,(45,33))))),(63,(56,(34,19)))),((40,((22,(57,(58,((59,(61,(60,(62,46)))),(((65,(39,38)),(54,(64,21))),(15,14)))))),(10,7))),((37,36),((55,9),((26,25),((48,(47,((24,23),(49,(32,(20,(27,(28,(50,(18,(17,16))))))))))),((35,(51,13)),((31,(30,29)),6)))))))),(8,((5,4),3))))),1);
   tree tree_24 [p = 0.013, P = 0.397] = [&W 0.012821] (2,((12,11),(44,((((43,41),(52,(53,(42,(45,33))))),(63,(56,(34,19)))),(((40,((22,(57,(58,((59,(61,(60,(62,46)))),(((65,(39,38)),(54,(64,21))),(15,14)))))),(10,7))),((37,36),((55,9),((26,25),((48,(47,((24,23),(49,(32,(20,(27,(28,(50,(18,(17,16))))))))))),((35,(51,13)),((31,(30,29)),6))))))),(8,((5,4),3)))))),1);
   tree tree_25 [p = 0.013, P = 0.410] = [&W 0.012821] (2,((12,11),(44,(((((43,41),(42,(((53,52),45),33))),(63,(56,(34,19)))),(((40,(22,(57,(58,((59,(61,(60,(62,46)))),(((65,(39,38)),(54,(64,21))),(15,14))))))),(10,7)),(((37,36),(55,9)),((26,25),((47,((24,23),(49,(32,(20,(27,(28,(50,(18,(17,16)))))))))),(48,((35,(51,13)),((31,(30,29)),6)))))))),(8,((5,4),3))))),1);
   tree tree_26 [p = 0.013, P = 0.423] = [&W 0.012821] (2,((12,11),(44,(((((43,41),(52,(53,(42,(45,33))))),(63,(56,(34,19)))),(((40,(22,(57,(58,((59,(61,(60,(62,46)))),(((65,(39,38)),(54,(64,21))),(15,14))))))),(10,7)),(((37,36),(55,9)),((26,25),((47,((24,23),(49,(32,(20,(27,(28,(50,(18,(17,16)))))))))),(48,((35,(51,13)),((31,(30,29)),6)))))))),(8,((5,4),3))))),1);
   tree tree_27 [p = 0.013, P = 0.436] = [&W 0.012821] (2,((12,11),(44,((((43,41),(53,(52,(45,(42,33))))),(56,(63,(34,19)))),(((40,((22,((58,57),(((61,59),(60,(62,46))),((54,((65,(39,38)),(64,21))),(15,14))))),(10,7))),((37,36),((26,25),(((47,(49,(32,(20,(27,(28,(50,(18,(17,16))))))))),(48,(23,(24,(55,9))))),((35,(51,13)),((31,(30,29)),6)))))),(8,((5,4),3)))))),1);
   tree tree_28 [p = 0.013, P = 0.449] = [&W 0.012821] (2,((12,11),((10,(((56,6),(((37,36),(31,(30,29))),((((48,47),((28,27),(55,20))),9),((24,23),((64,(62,(39,(26,25)))),((49,(18,(17,16))),((((58,57),(35,32)),(46,(((61,60),59),(54,(15,14))))),5))))))),(8,((50,(65,(22,21))),((38,7),4))))),((34,19),((63,40),((52,(45,(((53,44),41),((43,42),33)))),((51,13),3)))))),1);
   tree tree_29 [p = 0.013, P = 0.462] = [&W 0.012821] (2,((12,11),(44,((((43,41),(53,(52,(45,(42,33))))),(63,(56,(34,19)))),(((40,((22,(57,(58,(((61,59),(60,(62,46))),(((65,(39,38)),(54,(64,21))),(15,14)))))),(10,7))),((37,36),((55,9),((26,25),(((48,(24,23)),(47,(49,(32,(20,(27,(28,(50,(18,(17,16)))))))))),((35,(51,13)),((31,(30,29)),6))))))),(8,((5,4),3)))))),1);
   tree tree_30 [p = 0.013, P = 0.474] = [&W 0.012821] (2,((12,11),(44,((((43,41),(53,(52,(45,(42,33))))),(63,(56,(34,19)))),(((40,((22,((58,57),(((61,59),(60,(62,46))),((54,((65,(39,38)),(64,21))),(15,14))))),(10,7))),((37,36),((55,9),((26,25),(((48,(24,23)),(47,(49,(32,(20,(27,(28,(50,(18,(17,16)))))))))),((35,(51,13)),((31,(30,29)),6))))))),(8,((5,4),3)))))),1);
   tree tree_31 [p = 0.013, P = 0.487] = [&W 0.012821] (2,((12,11),((40,((56,(41,((44,(43,42)),((53,52),(45,33))))),(63,((64,34),19)))),((10,((((65,(39,38)),(22,21)),(54,(((((61,60),59),(58,57)),46),(15,14)))),7)),(((51,13),8),(((26,25),(((48,(24,23)),((62,47),((49,(35,32)),(20,(55,((27,(28,(50,(18,(17,16))))),9)))))),(((37,36),(31,(30,29))),6))),((5,4),3)))))),1);
   tree tree_32 [p = 0.013, P = 0.500] = [&W 0.012821] (2,((12,11),((40,((56,(41,((44,(43,42)),((53,52),(45,33))))),(63,((64,34),19)))),((10,((((65,(39,38)),(22,21)),(54,(((((61,60),59),(58,57)),46),(15,14)))),7)),(((51,13),8),(((26,25),((((62,47),(48,(24,23))),((49,(35,32)),(20,(55,((28,(27,(50,(18,(17,16))))),9))))),(((37,36),(31,(30,29))),6))),((5,4),3)))))),1);
   tree tree_33 [p = 0.013, P = 0.513] = [&W 0.012821] (2,((12,11),((40,((56,(41,(((44,43),42),((53,52),(45,33))))),(63,((64,34),19)))),((10,((((65,(39,38)),(22,21)),(54,((((61,60),59),((58,57),46)),(15,14)))),7)),(((51,13),8),(((26,25),(((48,(24,23)),((62,47),((49,(35,32)),(20,(55,(((28,27),(50,(18,(17,16)))),9)))))),(((37,36),(31,(30,29))),6))),((5,4),3)))))),1);
   tree tree_34 [p = 0.013, P = 0.526] = [&W 0.012821] (2,((12,11),((40,((56,(41,((44,(43,42)),((53,52),(45,33))))),(63,((64,34),19)))),((10,((((65,(39,38)),(22,21)),(54,((((61,60),59),((58,57),46)),(15,14)))),7)),(((51,13),8),(((26,25),(((48,(24,23)),((62,47),((49,(35,32)),(20,(55,(((28,27),(50,(18,(17,16)))),9)))))),(((37,36),(31,(30,29))),6))),((5,4),3)))))),1);
   tree tree_35 [p = 0.013, P = 0.538] = [&W 0.012821] (2,((12,11),((((63,40),(53,(52,(45,((43,42),33))))),(41,((56,(34,19)),13))),(10,(44,(7,(((((64,(58,57)),(22,21)),(65,((((61,60),59),46),(15,14)))),(54,((51,8),(35,((49,32),(((62,(47,(48,(24,23)))),(25,(50,((55,20),((28,27),9))))),((18,(17,16)),(26,((39,38),((37,36),((31,(30,29)),6))))))))))),((5,4),3))))))),1);
   tree tree_36 [p = 0.013, P = 0.551] = [&W 0.012821] (2,((12,11),((((63,40),(53,(52,(45,((43,42),33))))),(41,((56,(34,19)),13))),(10,(44,(7,((((((58,57),(64,54)),(22,21)),(65,((((61,60),59),46),(15,14)))),((51,8),(35,((49,32),(((62,(47,(48,(24,23)))),(25,(50,((55,20),((28,27),9))))),((18,(17,16)),(26,((39,38),((37,36),((31,(30,29)),6)))))))))),((5,4),3))))))),1);
   tree tree_37 [p = 0.013, P = 0.564] = [&W 0.012821] (2,((12,11),((40,((56,(41,((53,52),((44,(43,42)),(45,33))))),(63,((64,34),19)))),((10,((((65,(39,38)),(22,21)),(54,(((((61,60),59),(58,57)),46),(15,14)))),7)),(((51,13),8),(((26,25),((((62,47),(48,(24,23))),((49,(35,32)),(20,(55,((28,(27,(50,(18,(17,16))))),9))))),(((37,36),(31,(30,29))),6))),((5,4),3)))))),1);
   tree tree_38 [p = 0.013, P = 0.577] = [&W 0.012821] (2,((12,11),((40,((56,(41,((44,(43,42)),((53,52),(45,33))))),(63,((64,34),19)))),((10,((((65,(39,38)),(22,21)),(54,(((((61,60),59),(58,57)),46),(15,14)))),7)),(((51,13),8),(((26,25),((((48,(62,47)),(24,23)),((49,(35,32)),(20,(55,(((28,27),(50,(18,(17,16)))),9))))),(((37,36),(31,(30,29))),6))),((5,4),3)))))),1);
   tree tree_39 [p = 0.013, P = 0.590] = [&W 0.012821] (2,((12,11),((45,43),(((52,40),(53,(44,(41,(42,33))))),(((64,63),(((34,19),((18,17),16)),(56,(((51,8),(13,7)),((48,(24,23)),(((62,47),((37,36),(26,25))),(((55,(38,20)),((28,27),(50,9))),((10,((31,(30,29)),6)),((65,22),((61,60),(((49,39),(35,32)),(((57,(54,21)),((58,(59,46)),(15,14))),(5,4))))))))))))),3)))),1);
   tree tree_40 [p = 0.013, P = 0.603] = [&W 0.012821] (2,((12,11),((44,((((63,(53,(52,(41,(45,(43,33)))))),(40,(56,(34,19)))),(51,13)),10)),(7,(8,((64,(22,(54,(21,(((65,50),(39,38)),(((58,57),((60,(61,59)),46)),(15,14))))))),(42,(((26,25),(((55,20),((28,27),9)),(((62,((48,47),(24,23))),((18,17),16)),((31,(30,29)),((37,36),6))))),((35,32),(49,(5,(4,3))))))))))),1);
   tree tree_41 [p = 0.013, P = 0.615] = [&W 0.012821] (2,((12,11),((44,(((40,(((63,53),(52,(41,(45,(43,33))))),(56,(34,19)))),(51,13)),10)),(7,(8,((64,(22,(54,((((65,50),(39,38)),21),((57,((60,(61,59)),(58,46))),(15,14)))))),(42,(((26,25),((55,20),((28,27),9))),(((((48,47),(62,(24,23))),((18,17),16)),((31,(30,29)),((37,36),6))),((35,32),(49,((5,4),3))))))))))),1);
   tree tree_42 [p = 0.013, P = 0.628] = [&W 0.012821] (2,((12,11),(((56,((43,(44,41)),(53,(52,(45,(42,33)))))),(63,((64,34),19))),((40,(10,(((22,((65,(39,38)),21)),((58,57),(((61,59),(60,46)),(54,(15,14))))),7))),(((51,13),8),(((26,25),((47,((49,((35,32),(20,(27,(28,(50,(18,(17,16)))))))),((62,48),((24,23),(55,9))))),((37,36),((31,(30,29)),6)))),((5,4),3)))))),1);
   tree tree_43 [p = 0.013, P = 0.641] = [&W 0.012821] (2,((12,11),((44,((((63,(53,(52,(41,(45,(43,33)))))),(40,(56,(34,19)))),(51,13)),10)),(7,(8,((64,(54,(22,(21,(((65,50),(39,38)),((((60,(61,59)),(58,57)),46),(15,14))))))),(42,(((26,25),(((55,20),((28,27),9)),(((62,((48,47),(24,23))),((18,17),16)),((31,(30,29)),((37,36),6))))),((35,32),(49,(5,(4,3))))))))))),1);
   tree tree_44 [p = 0.013, P = 0.654] = [&W 0.012821] (2,((12,11),((45,(43,(44,(41,(42,33))))),(((53,52),40),((64,63),((((34,19),(56,((18,17),16))),(((51,8),(13,7)),((48,(24,23)),(((55,20),((50,(28,27)),9)),(((62,47),((37,36),(26,25))),(((31,(30,29)),6),(10,((65,22),(((39,38),(49,(35,32))),(((54,21),(57,(58,((((61,60),59),46),(15,14))))),(5,4))))))))))),3))))),1);
   tree tree_45 [p = 0.013, P = 0.667] = [&W 0.012821] (2,((12,11),((45,((44,41),(43,(42,33)))),((53,52),(40,((64,63),((((56,(34,19)),((18,17),16)),((((51,13),8),7),((50,((28,27),((55,20),9))),((48,(24,23)),(((37,36),((62,47),(26,25))),(((31,(30,29)),6),(10,((65,22),(((39,38),(49,(35,32))),(((54,21),(57,(58,((((61,60),59),46),(15,14))))),(5,4))))))))))),3)))))),1);
   tree tree_46 [p = 0.013, P = 0.679] = [&W 0.012821] (2,((12,11),((43,(42,(45,(41,33)))),((44,(52,40)),(8,(((64,63),((53,((34,19),((18,17),16))),(((((59,58),((46,21),(57,(((35,32),(39,(49,(30,29)))),(15,14))))),(31,10)),((65,22),(((((47,((37,36),26)),(48,(24,23))),(54,(62,(56,(51,13))))),(28,(((50,((55,25),(38,20))),9),(27,7)))),6))),((61,60),(5,4))))),3))))),1);
   tree tree_47 [p = 0.013, P = 0.692] = [&W 0.012821] (2,((12,11),((45,43),(((52,40),(53,(44,(42,(41,33))))),(((64,63),(((34,19),((18,17),16)),(56,(((51,8),(13,7)),(62,((48,(24,23)),((47,((37,36),(26,25))),(((55,(38,20)),((28,27),(50,9))),((((31,(30,29)),10),6),((65,22),((((49,39),(35,32)),((((59,58),46),(57,(54,21))),(15,14))),((61,60),(5,4))))))))))))),3)))),1);
   tree tree_48 [p = 0.013, P = 0.705] = [&W 0.012821] (2,((12,11),(((((22,((65,(39,38)),21)),((58,57),(((61,59),(60,46)),(54,(15,14))))),10),7),((40,((56,(((44,43),41),(42,((53,52),(45,33))))),(63,((64,34),19)))),(((51,13),8),(((26,25),(((62,47),((48,(24,23)),((49,(35,32)),(20,((28,27),((50,(18,(17,16))),(55,9))))))),((31,(30,29)),((37,36),6)))),(5,(4,3))))))),1);
   tree tree_49 [p = 0.013, P = 0.718] = [&W 0.012821] (2,((12,11),(44,((((41,(43,(42,33))),(63,(56,(34,19)))),(((53,52),45),((((62,60),46),((37,36),(55,9))),(((26,25),((40,(22,(57,(58,((61,59),(((65,(39,38)),(54,(64,21))),(15,14))))))),(10,7))),((47,((49,(24,23)),(32,(20,(28,(27,(50,(18,(17,16))))))))),(48,((35,(51,13)),((31,(30,29)),6)))))))),(8,(5,(4,3)))))),1);
   tree tree_50 [p = 0.013, P = 0.731] = [&W 0.012821] (2,((12,11),(((((22,((65,(39,38)),21)),((58,57),(((61,59),(60,46)),(54,(15,14))))),10),7),((40,((56,(((44,43),41),(53,(52,(45,(42,33)))))),(63,((64,34),19)))),(((51,13),8),(((26,25),(((62,47),(((49,(35,32)),(20,((28,27),(50,(18,(17,16)))))),(48,((24,23),(55,9))))),((37,36),((31,(30,29)),6)))),(5,(4,3))))))),1);
   tree tree_51 [p = 0.013, P = 0.744] = [&W 0.012821] (2,((12,11),(((((22,((65,(39,38)),21)),((58,57),(((61,59),(60,46)),(54,(15,14))))),10),7),((40,((56,(((44,43),41),(53,(52,(45,(42,33)))))),(63,((64,34),19)))),(((51,13),8),(((26,25),(((62,47),(((49,(35,32)),(20,((28,27),(50,(18,(17,16)))))),(48,((24,23),(55,9))))),((31,(30,29)),((37,36),6)))),(5,(4,3))))))),1);
   tree tree_52 [p = 0.013, P = 0.756] = [&W 0.012821] (2,((12,11),(44,((((43,41),(53,(52,(45,(42,33))))),(56,(63,((64,34),19)))),((40,(((22,((65,(39,38)),21)),((58,57),(((61,59),(60,(62,46))),(54,(15,14))))),(10,7))),(((26,25),(((37,36),(47,((49,((35,32),(20,(27,(28,(50,(18,(17,16)))))))),(48,(23,(24,(55,9))))))),((31,(30,29)),6))),(((51,13),8),((5,4),3))))))),1);
   tree tree_53 [p = 0.013, P = 0.769] = [&W 0.012821] (2,((12,11),((53,45),(7,(((50,(18,17)),8),(39,(((48,47),(((62,31),(((65,32),(60,(26,25))),(35,16))),((37,36),((((44,33),30),(51,13)),6)))),((29,(28,(27,(55,24)))),((20,((23,(40,(64,21))),((63,(42,(52,(43,41)))),((34,19),((56,38),10))))),(54,((((58,57),46),22),((61,59),(15,(14,((49,9),(5,(4,3)))))))))))))))),1);
   tree tree_54 [p = 0.013, P = 0.782] = [&W 0.012821] (2,((12,11),(44,((((41,(43,(42,(((53,52),45),33)))),(63,(56,(34,19)))),(((40,(22,(57,(58,((61,59),(((65,(39,38)),(54,(64,21))),(15,14))))))),(10,7)),(((60,(62,46)),((37,36),(55,9))),((26,25),((47,((24,23),(49,(32,(20,(28,(27,(50,(18,(17,16)))))))))),(48,((35,(51,13)),((31,(30,29)),6)))))))),(8,((5,4),3))))),1);
   tree tree_55 [p = 0.013, P = 0.795] = [&W 0.012821] (2,((12,11),(44,((((43,41),(53,(52,(45,(42,33))))),(56,(63,(34,19)))),(((40,((22,((58,57),(((61,59),(60,(62,46))),((54,((65,(39,38)),(64,21))),(15,14))))),(10,7))),((26,25),((37,36),(((47,(49,((20,(27,(28,(50,(18,(17,16)))))),(32,(35,(51,13)))))),(48,(23,(24,(55,9))))),((31,(30,29)),6))))),(8,((5,4),3)))))),1);
   tree tree_56 [p = 0.013, P = 0.808] = [&W 0.012821] (2,((12,11),((((56,(((44,43),41),(53,(52,(45,(42,33)))))),(63,((64,34),19))),(40,(10,(((22,((65,(39,38)),21)),((58,57),(((61,59),(60,46)),(54,(15,14))))),7)))),(((51,13),8),(((26,25),((47,(((49,(35,32)),(20,(27,(28,(50,(18,(17,16))))))),((62,48),((24,23),(55,9))))),((37,36),((31,(30,29)),6)))),(5,(4,3)))))),1);
   tree tree_57 [p = 0.013, P = 0.821] = [&W 0.012821] (2,((12,11),((45,((44,41),(43,(42,33)))),((53,52),(40,((64,63),((((56,(34,19)),((18,17),16)),((((51,13),8),7),((50,((28,27),((55,20),9))),((48,(24,23)),(((37,36),((62,47),(26,25))),(((31,(30,29)),6),(10,((65,22),((54,(21,(57,(58,((((61,60),59),46),(15,14)))))),((39,38),((49,(35,32)),(5,4)))))))))))),3)))))),1);
   tree tree_58 [p = 0.013, P = 0.833] = [&W 0.012821] (2,((12,11),((44,(((53,52),45),((43,(42,41)),33))),((40,(56,(34,19))),((64,63),(((51,13),((18,(17,16)),((8,7),((50,((28,27),((55,20),9))),((48,(24,23)),((62,47),(((26,25),(((37,36),(31,(30,29))),6)),(49,((35,32),(((54,((65,22),(21,(57,(58,((((61,60),59),46),(15,14))))))),10),((39,38),(5,4)))))))))))),3))))),1);
   tree tree_59 [p = 0.013, P = 0.846] = [&W 0.012821] (2,((12,11),(((((22,((65,(39,38)),21)),((58,57),(((61,59),(60,46)),(54,(15,14))))),10),7),((40,((56,(((44,43),41),(53,(52,(45,(42,33)))))),(63,((64,34),19)))),(((51,13),8),(((26,25),((47,(((49,(35,32)),(20,((28,27),(50,(18,(17,16)))))),((62,48),((24,23),(55,9))))),((37,36),((31,(30,29)),6)))),(5,(4,3))))))),1);
   tree tree_60 [p = 0.013, P = 0.859] = [&W 0.012821] (2,((12,11),((((18,17),16),((8,7),((50,((28,27),((55,20),9))),(((62,47),(48,(24,23))),(((26,25),(((37,36),(31,(30,29))),6)),(49,((35,32),(10,((54,(65,(22,(21,(57,(58,((((61,60),59),46),(15,14)))))))),(39,(38,(5,4)))))))))))),((51,13),(((44,(45,((53,52),(((43,42),41),33)))),((64,63),((56,40),(34,19)))),3)))),1);
   tree tree_61 [p = 0.013, P = 0.872] = [&W 0.012821] (2,((12,11),((45,43),(((52,40),(53,(44,(41,(42,33))))),(((64,63),(((34,19),((18,17),16)),(56,(((51,8),(13,7)),(62,((48,(24,23)),((47,((37,36),(26,25))),(((55,(38,20)),((28,27),(50,9))),((10,((31,(30,29)),6)),((65,22),((61,60),(((49,39),(35,32)),((((58,(59,46)),(57,(54,21))),(15,14)),(5,4)))))))))))))),3)))),1);
   tree tree_62 [p = 0.013, P = 0.885] = [&W 0.012821] (2,((12,11),((45,(43,(44,(41,(42,33))))),(((53,52),40),((64,63),((((34,19),(56,((18,17),16))),(((51,8),(13,7)),((48,(24,23)),(((55,20),((50,(28,27)),9)),(((37,36),((62,47),(26,25))),(((31,(30,29)),6),(10,((65,22),(((39,38),(49,(35,32))),(((54,21),(57,(58,((((61,60),59),46),(15,14))))),(5,4))))))))))),3))))),1);
   tree tree_63 [p = 0.013, P = 0.897] = [&W 0.012821] (2,((12,11),(44,(((63,(34,(56,19))),(((42,41),(43,33)),(((53,52),45),((37,36),(9,(55,(((62,60),46),(((26,25),((40,(22,(57,(58,(((65,(39,38)),(54,(64,21))),((61,59),(15,14))))))),(10,7))),((47,((49,(24,23)),(32,(20,(28,(27,(50,(18,(17,16))))))))),(48,((35,(51,13)),((31,(30,29)),6)))))))))))),(8,(5,(4,3)))))),1);
   tree tree_64 [p = 0.013, P = 0.910] = [&W 0.012821] (2,((12,11),((53,52),((45,((44,41),((43,42),33))),(40,((64,63),((((56,(34,19)),((18,17),16)),(((51,13),(8,7)),((50,((28,27),((55,20),9))),((48,(24,23)),(((62,47),(26,25)),((((37,36),(31,(30,29))),6),(10,((65,22),((54,(21,(57,(58,((((61,60),59),46),(15,14)))))),((49,(35,32)),((39,38),(5,4)))))))))))),3)))))),1);
   tree tree_65 [p = 0.013, P = 0.923] = [&W 0.012821] (2,((12,11),((53,52),((45,((44,41),((43,42),33))),(40,((64,63),(((56,(34,19)),(((18,17),16),(((51,13),(8,7)),((50,((28,27),((55,20),9))),((48,(24,23)),(((62,47),(26,25)),((((37,36),(31,(30,29))),6),(10,((65,22),((54,(21,(57,(58,((((61,60),59),46),(15,14)))))),((49,(35,32)),((39,38),(5,4))))))))))))),3)))))),1);
   tree tree_66 [p = 0.013, P = 0.936] = [&W 0.012821] (2,((12,11),((45,((44,41),((43,42),33))),((53,52),(40,((64,63),((((56,(34,19)),((18,17),16)),(((51,13),(8,7)),((50,((28,27),((55,20),9))),((48,(24,23)),(((62,47),(26,25)),((37,36),(((31,(30,29)),6),(10,((65,22),((54,(21,(57,(58,((((61,60),59),46),(15,14)))))),((39,38),((49,(35,32)),(5,4))))))))))))),3)))))),1);
   tree tree_67 [p = 0.013, P = 0.949] = [&W 0.012821] (2,((12,11),((53,52),((45,((44,41),((43,42),33))),(40,((64,63),((((56,(34,19)),((18,17),16)),(((51,13),(8,7)),((50,((28,27),((55,20),9))),((48,(24,23)),(((62,47),(26,25)),(((37,36),((31,(30,29)),6)),(10,((65,22),((54,(21,(57,(58,((((61,60),59),46),(15,14)))))),((49,(35,32)),((39,38),(5,4)))))))))))),3)))))),1);
   tree tree_68 [p = 0.013, P = 0.962] = [&W 0.012821] (2,((12,11),((44,(((53,52),45),((43,(42,41)),33))),((40,(56,(34,19))),((64,63),(((51,13),(((18,17),16),((8,7),((50,((28,27),((55,20),9))),((48,(24,23)),((62,47),(((26,25),(((37,36),(31,(30,29))),6)),((((65,22),(54,(21,(57,(58,((((61,60),59),46),(15,14))))))),10),((49,(35,32)),((39,38),(5,4))))))))))),3))))),1);
   tree tree_69 [p = 0.013, P = 0.974] = [&W 0.012821] (2,((12,11),((44,(((53,52),45),((43,(42,41)),33))),((40,(56,(34,19))),((64,63),(((51,13),((18,(17,16)),((8,7),((50,((28,27),((55,20),9))),((48,(24,23)),((62,47),(((26,25),(((37,36),(31,(30,29))),6)),(49,((35,32),((((65,22),(54,(21,(57,(58,((((61,60),59),46),(15,14))))))),10),((39,38),(5,4)))))))))))),3))))),1);
   tree tree_70 [p = 0.013, P = 0.987] = [&W 0.012821] (2,((12,11),(((53,52),(45,(((43,42),(44,41)),33))),((40,(56,(34,19))),((64,63),((((18,17),16),(((51,13),(8,7)),((50,((28,27),((55,20),9))),((48,(24,23)),((62,47),((26,25),((((37,36),(31,(30,29))),6),(10,((65,22),((54,(21,(57,(58,((((61,60),59),46),(15,14)))))),((49,(35,32)),((39,38),(5,4))))))))))))),3))))),1);
   tree tree_71 [p = 0.013, P = 1.000] = [&W 0.012821] (2,((12,11),(((53,52),(45,(((43,42),(44,41)),33))),((40,(56,(34,19))),((64,63),((((18,17),16),((51,13),((8,7),((50,((28,27),((55,20),9))),((48,(24,23)),((62,47),((26,25),((((37,36),(31,(30,29))),6),(10,(((65,22),(54,(21,(57,(58,((((61,60),59),46),(15,14))))))),((49,(35,32)),((39,38),(5,4))))))))))))),3))))),1);
end;
